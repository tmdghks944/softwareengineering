package Lab10;
import java.awt.*;
import simView.*;

public class routing_model extends ViewableDigraph
{

	public routing_model()
	{
		super("routing_model");
    	
		ViewableAtomic g = new sender("sender", 10);
		//어떤 모델을 가져다 쓸건지.
		ViewableAtomic r = new router("router", 10);
    	
		add(g);
		//시뮬레이터에 모델을 등록.
		add(r);
  
		for(int i=1;i<=5;i++) {
			ViewableAtomic p = new receiver("receiver #"+i,10);
			add(p);
			addCoupling(r,"out"+i,p,"in");
		}
		//gpt모델을 커플링 시킨 코드.
		addCoupling(g, "out", r, "in");
		//각 모델들 끼리 연결을 시킴.
		//(1모델 이름, 1모델의 아웃풋포트, 2모델 이름, 2모델의 인풋)
		addCoupling(r, "out", g, "in");
	}

    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(988, 646);
        ((ViewableComponent)withName("receiver #2")).setPreferredLocation(new Point(718, 165));
        ((ViewableComponent)withName("receiver #4")).setPreferredLocation(new Point(724, 374));
        ((ViewableComponent)withName("sender")).setPreferredLocation(new Point(153, 275));
        ((ViewableComponent)withName("receiver #1")).setPreferredLocation(new Point(719, 49));
        ((ViewableComponent)withName("router")).setPreferredLocation(new Point(390, 248));
        ((ViewableComponent)withName("receiver #5")).setPreferredLocation(new Point(717, 514));
        ((ViewableComponent)withName("receiver #3")).setPreferredLocation(new Point(722, 270));
    }
}
